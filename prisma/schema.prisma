// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  // Optional for RBAC
  role          String       @default("user") // e.g., "admin", "user"
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Our application models
model Client {
  id          String @id @default(cuid())
  name        String
  email       String @unique
  phone       String?
  address     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  salesOrders SalesOrder[]
}

model Product {
  id              String @id @default(cuid())
  name            String
  sku             String @unique
  category        String?
  stock           Int    @default(0)
  price           Float
  imageUrl        String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  salesOrderItems SalesOrderItem[]
}

model SalesOrder {
  id             String      @id @default(cuid())
  orderNumber    String      @unique
  clientId       String
  orderDate      DateTime
  dueDate        DateTime?
  status         String      // Pending, Fulfilled, Cancelled
  subtotal       Float
  tax            Float
  total          Float
  invoiceGenerated Boolean   @default(false)
  
  client          Client           @relation(fields: [clientId], references: [id])
  items           SalesOrderItem[]
  
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model SalesOrderItem {
  id          String   @id @default(cuid())
  orderId     String
  productId   String
  description String
  quantity    Int
  unitPrice   Float
  
  order       SalesOrder @relation(fields: [orderId], references: [id])
  product     Product    @relation(fields: [productId], references: [id])
  
  @@unique([orderId, productId])
}
